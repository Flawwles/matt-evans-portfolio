{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mevans/Dev/matt-evans-2020/components/ExampleDemo/ExampleDemo.js\";\nexport default function ExampleDemo({\n  children\n}) {\n  const JsxString = (component, counter = 0) => {\n    let type = component.type.name;\n    let props = component.props;\n    let propsString = \"\";\n\n    for (let key in props) {\n      if (key !== \"children\") {\n        let propValue = props[key];\n        let value = \"\";\n\n        if (propValue instanceof Object) {\n          value = `{${JSON.stringify(propValue).replace(/['\"]+/g, '')}}`;\n        } else {\n          value = `\"${propValue}\"`;\n        }\n\n        propsString += ` ${key}=${value}`;\n      }\n    }\n\n    if (props.children) {\n      counter += 2;\n      var children = JsxString(props.children, counter);\n      return `<${type}${propsString}>\n      ${Array(counter).join(\" \")}  ${children}\n      ${Array(counter).join(\" \")}</${type}>`;\n    }\n\n    return `<${type}${propsString} />`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ExampleDemo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Example: \", children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" code: \", /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: JsxString(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/mevans/Dev/matt-evans-2020/components/ExampleDemo/ExampleDemo.js"],"names":["ExampleDemo","children","JsxString","component","counter","type","name","props","propsString","key","propValue","value","Object","JSON","stringify","replace","Array","join"],"mappings":";;AAAA,eAAe,SAASA,WAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAC7C,QAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,OAAO,GAAG,CAAtB,KAA4B;AAC1C,QAAIC,IAAI,GAAGF,SAAS,CAACE,IAAV,CAAeC,IAA1B;AACA,QAAIC,KAAK,GAAGJ,SAAS,CAACI,KAAtB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBF,KAAhB,EAAuB;AACrB,UAAIE,GAAG,KAAK,UAAZ,EAAwB;AACtB,YAAIC,SAAS,GAAGH,KAAK,CAACE,GAAD,CAArB;AACA,YAAIE,KAAK,GAAG,EAAZ;;AACA,YAAID,SAAS,YAAYE,MAAzB,EAAiC;AAC/BD,UAAAA,KAAK,GAAI,IAAGE,IAAI,CAACC,SAAL,CAAeJ,SAAf,EAA0BK,OAA1B,CAAkC,QAAlC,EAA4C,EAA5C,CAAgD,GAA5D;AACD,SAFD,MAEO;AACLJ,UAAAA,KAAK,GAAI,IAAGD,SAAU,GAAtB;AACD;;AACDF,QAAAA,WAAW,IAAK,IAAGC,GAAI,IAAGE,KAAM,EAAhC;AACD;AACF;;AACD,QAAIJ,KAAK,CAACN,QAAV,EAAoB;AAClBG,MAAAA,OAAO,IAAI,CAAX;AACA,UAAIH,QAAQ,GAAGC,SAAS,CAACK,KAAK,CAACN,QAAP,EAAiBG,OAAjB,CAAxB;AACA,aAAQ,IAAGC,IAAK,GAAEG,WAAY;AACxC,QAAQQ,KAAK,CAACZ,OAAD,CAAL,CAAea,IAAf,CAAoB,GAApB,CAAyB,KAAIhB,QAAS;AAC9C,QAAQe,KAAK,CAACZ,OAAD,CAAL,CAAea,IAAf,CAAoB,GAApB,CAAyB,KAAIZ,IAAK,GAFhC;AAGD;;AACD,WAAQ,IAAGA,IAAK,GAAEG,WAAY,KAA9B;AACD,GAxBH;;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAA,+BAAgBP,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,yCAAY;AAAA,+BAAK;AAAA,oBACtBC,SAAS,CAACD,QAAD;AADa;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKG;AAAA;AAAA;AAAA;AAAA,YALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH","sourcesContent":["export default function ExampleDemo ({children}) {\n    const JsxString = (component, counter = 0) => {\n        let type = component.type.name;\n        let props = component.props;\n        let propsString = \"\";\n        for (let key in props) {\n          if (key !== \"children\") {\n            let propValue = props[key];\n            let value = \"\";\n            if (propValue instanceof Object) {\n              value = `{${JSON.stringify(propValue).replace(/['\"]+/g, '')}}`;\n            } else {\n              value = `\"${propValue}\"`;\n            }\n            propsString += ` ${key}=${value}`;\n          }\n        }\n        if (props.children) {\n          counter += 2;\n          var children = JsxString(props.children, counter);\n          return `<${type}${propsString}>\n      ${Array(counter).join(\" \")}  ${children}\n      ${Array(counter).join(\" \")}</${type}>`;\n        }\n        return `<${type}${propsString} />`;\n      }\n    return (\n        <div className=\"ExampleDemo\">\n            <div> Example: {children} </div>\n            <div> code: <pre><code>\n      {JsxString(children)}\n      </code></pre></div>\n           <hr/>\n            \n        </div>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}